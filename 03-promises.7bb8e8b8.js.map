{"mappings":"AAAA,MAAMA,EAASC,SAASC,cAAc,SAEhCC,EAAUH,EAAOI,SAASC,MAC1BC,EAASN,EAAOI,SAASG,KACzBC,EAAoBR,EAAOI,SAASK,OACpCC,EAAQV,EAAOW,iBAiCrB,SAASC,EAAcC,EAAUR,GAC/B,OAAO,IAAIS,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAI,C,SAAEF,E,MAAUR,IAEhBW,EAAI,C,SAAEH,E,MAAUR,GAAQ,GAEzBA,EAAM,G,CAxCbK,EAAMU,iBAAiB,SAEvB,SAAiBC,GACfA,EAAMC,iBACN,MAAMC,EAAgB,CACpBV,SAAU,KACVR,MAAOmB,OAAOrB,EAAQsB,QAElBC,EAAkBF,OAAOhB,EAAkBiB,OAC3ClB,EAAOiB,OAAOlB,EAAOmB,QAI7B,UAAsBZ,SAAAc,EAAUtB,MAAAuB,GAASF,EAAiBnB,GACxDG,EAAMmB,aAAa,WAAY,QAC/B,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAiBI,GAAK,EAEzClB,EADWkB,EACaF,GACrBG,MAAK,EAAClB,SAAEA,EAAQR,MAAEA,MACjB2B,QAAQC,IAAI,uBAAqBpB,QAAiBR,MAAU,IAE7D6B,OAAM,EAACrB,SAAEA,EAAQR,MAAEA,MAClB2B,QAAQC,IAAI,sBAAoBpB,QAAeR,MAAU,IAE7DuB,GAASrB,EAEXU,YAAW,KACTP,EAAMyB,gBAAgB,WAAW,GAChCP,E,CAlBHQ,CAAWb,EAAeG,EAAiBnB,E","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\n\nconst delayEl = formEl.elements.delay;\nconst stepEl = formEl.elements.step;\nconst amountOfPromiseEl = formEl.elements.amount;\nconst btnEl = formEl.lastElementChild;\n\nbtnEl.addEventListener('click', onStart);\n\nfunction onStart(event) {\n  event.preventDefault();\n  const objForPromise = {\n    position: null,\n    delay: Number(delayEl.value),\n  };\n  const amountOfPromise = Number(amountOfPromiseEl.value);\n  const step = Number(stepEl.value);\n  addPromise(objForPromise, amountOfPromise, step);\n}\n\nfunction addPromise({ position, delay }, amountOfPromise, step) {\n  btnEl.setAttribute('disabled', 'true');\n  for (let i = 1; i <= amountOfPromise; i += 1) {\n    position = i;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n  setTimeout(() => {\n    btnEl.removeAttribute('disabled');\n  }, delay);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delayEl","elements","delay","$47d4ff9957288465$var$stepEl","step","$47d4ff9957288465$var$amountOfPromiseEl","amount","$47d4ff9957288465$var$btnEl","lastElementChild","$47d4ff9957288465$var$createPromise","position","Promise","res","rej","setTimeout","Math","random","addEventListener","event","preventDefault","objForPromise","Number","value","amountOfPromise","position1","delay1","setAttribute","i","then","console","log","catch","removeAttribute","$47d4ff9957288465$var$addPromise"],"version":3,"file":"03-promises.7bb8e8b8.js.map"}